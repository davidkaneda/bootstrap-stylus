//
// Mixins
// --------------------------------------------------

// UTILITY MIXINS
// --------------------------------------------------

// Clearfix
// --------
// For clearing floats like a boss h5bp.com/q
clearfix()
  *zoom 1
  &:before,
  &:after
    display table
    content ""
    // Fixes Opera/contenteditable bug:
    // http://nicolasgallagher.com/micro-clearfix-hack/#comment-36952
    line-height 0

  &:after
    clear both

// Webkit-style focus
// ------------------
tab-focus()
  // Default
  outline thin dotted #333
  // Webkit
  outline 5px auto -webkit-focus-ring-color
  outline-offset -2px

// Center-align a block level element
// ----------------------------------
center-block()
  display block
  margin-left auto
  margin-right auto

// IE7 inline-block
// ----------------
ie7-inline-block()
  *display inline  // IE7 inline-block hack
  *zoom 1

// IE7 likes to collapse whitespace on either side of the inline-block elements.
// Ems because we're attempting to match the width of a space character. Left
// version is for form buttons, which typically come after other elements, and
// right version is for icons, which come before. Applying both is ok, but it will
// mean that space between those elements will be .6em (~2 space characters) in IE7,
// instead of the 1 space in other browsers.
ie7-restore-left-whitespace()
  *margin-left .3em

  &:first-child
    *margin-left 0

ie7-restore-right-whitespace()
  *margin-right .3em

// Sizing shortcuts
// -------------------------
size(height, width)
  width width
  height height

square(size)
  size(size, size);

// Placeholder text
// -------------------------
placeholder(color = $placeholderText)
  &:-moz-placeholder
    color color

  &:-ms-input-placeholder
    color color

  &::-webkit-input-placeholder
    color color

// Text overflow
// -------------------------
// Requires inline-block or block for proper styling
text-overflow()
  overflow hidden
  text-overflow ellipsis
  white-space nowrap

// CSS image replacement
// -------------------------
// Source: https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757
hide-text()
  font 0/0 a
  color transparent
  text-shadow none
  background-color transparent
  border 0

// FONTS
// --------------------------------------------------

fontFamilySerif()
  font-family $serifFontFamily

fontFamilySans-serif()
  font-family $sansFontFamily

fontFamilyMonospace()
  font-family $monoFontFamily

fontShorthand(size = $baseFontSize, weight = normal, lineHeight = $baseLineHeight)
  font-size size
  font-weight weight
  line-height lineHeight

fontSerif(size = $baseFontSize, weight = normal, lineHeight = $baseLineHeight)
  fontFamilySerif()
  fontShorthand(size, weight, lineHeight);

fontSans-serif(size = $baseFontSize, weight = normal, lineHeight = $baseLineHeight)
  fontFamilySans-serif()
  fontShorthand(size, weight, lineHeight);

fontMonospace(size = $baseFontSize, weight = normal, lineHeight = $baseLineHeight)
  fontFamilyMonospace()
  fontShorthand(size, weight, lineHeight);

// FORMS
// --------------------------------------------------

// Block level inputs
input-block-level()
  display block
  width 100%
  min-height $inputHeight  // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  box-sizing border-box // Makes inputs behave like true block-level elements

// Mixin for form field states
formFieldState(textColor = #555, borderColor = #ccc, backgroundColor = #f5f5f5)
  // Set the text color
  .control-label,
  .help-block,
  .help-inline
    color textColor

  // Style inputs accordingly
  .checkbox,
  .radio,
  input,
  select,
  textarea
    color textColor

  input,
  select,
  textarea
    border-color borderColor
    box-shadow  // Redeclare so transitions work
    &:focus
      border-color darken(borderColor, 10%)
      box-shadow inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten(borderColor, 20%);

  // Give a small background color for input-prepend/-append
  .input-prepend .add-on,
  .input-append .add-on
    color textColor
    background-color backgroundColor
    border-color textColor

// CSS3 PROPERTIES
// --------------------------------------------------

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden
// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples
backface-visibility(visibility)
  backface-visibility visibility

// Background clipping
// Heads up: FF 3.6 and under need "padding" instead of "padding-box"
background-clip(clip)
  vendor('background-clip', clip)

// User select
// For selecting text on the page
user-select(select)
  user-select select

// Resize anything
resizable(direction)
  resize direction  // Options: horizontal, vertical, both
  overflow auto  // Safari fix

// CSS3 Content Columns
content-columns(columnCount, columnGap = $gridGutterWidth)
  column-count columnCount
  column-gap columnGap

// Optional hyphenation
hyphens(mode = auto)
  word-wrap break-word
  hyphens mode

// BACKGROUNDS
// --------------------------------------------------

// Add an alphatransparency value to any background or border color (via Elyse Holladay)
translucentBackground(color = $white, alpha = 1)
  background-color hsla(hue(color), saturation(color), lightness(color), alpha)

translucentBorder(color = $white, alpha = 1)
  border-color hsla(hue(color), saturation(color), lightness(color), alpha)
  background-clip padding-box

// Gradient Bar Colors for buttons and alerts
gradientBar(primaryColor, secondaryColor, textColor = #fff, textShadow = 0 -1px 0 rgba(0,0,0,.25))
  color textColor
  text-shadow textShadow
  gradient-vertical(primaryColor, secondaryColor);
  border-color secondaryColor secondaryColor darken(secondaryColor, 15%)
  border-color rgba(0,0,0,.1) rgba(0,0,0,.1) fadein(rgba(0,0,0,.1), 15%)

// Gradients

gradient-horizontal(startColor = #555, endColor = #333)
  background-color endColor
  background-image linear-gradient(to right, startColor, endColor)  // Standard, IE10
  background-repeat repeat-x

gradient-vertical(startColor = #555, endColor = #333)
  background-color mix(startColor, endColor, 60%)
  background-image linear-gradient(top, startColor, endColor)  // Standard, IE10
  background-repeat repeat-x

gradient-directional(startColor = #555, endColor = #333, deg = 45deg)
  background-color endColor
  background-repeat repeat-x
  background-image -moz-linear-gradient(deg, startColor, endColor)  // FF 3.6+
  background-image -webkit-linear-gradient(deg, startColor, endColor)  // Safari 5.1+, Chrome 10+
  background-image -o-linear-gradient(deg, startColor, endColor)  // Opera 11.10
  background-image linear-gradient(deg, startColor, endColor)  // Standard, IE10

gradient-vertical-three-colors(startColor = #00b3ee, midColor = #7a43b6, colorStop = 50%, endColor = #c3325f)
  background-color mix(midColor, endColor, 80%)
  background-image linear-gradient(startColor, midColor colorStop, endColor)
  background-repeat no-repeat

gradient-radial(innerColor = #555, outerColor = #333)
  background-color outerColor
  background-image -webkit-gradient(radial, center center, 0, center center, 460, from(innerColor), to(outerColor))
  background-image -webkit-radial-gradient(circle, innerColor, outerColor)
  background-image -moz-radial-gradient(circle, innerColor, outerColor)
  background-image -o-radial-gradient(circle, innerColor, outerColor)
  background-repeat no-repeat

gradient-striped(color = #555, angle = top left)
  background-color color
  background-image linear-gradient(angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent)

// COMPONENT MIXINS
// --------------------------------------------------

// Horizontal dividers
// -------------------------
// Dividers (basically an hr) within dropdowns and nav lists
nav-divider(top = #e5e5e5, bottom = $white)
  // IE7 needs a set width since we gave a height. Restricting just
  // to IE7 to keep the 1px left/right space in other browsers.
  // It is unclear where IE is getting the extra space that we need
  // to negative-margin away, but so it goes.
  height 2px
  margin 2px 0 1px  // 8px 1px
  overflow hidden
  background-color top
  border-bottom 1px solid bottom

// Button backgrounds
// ------------------
buttonBackground(startColor, endColor, textColor = #fff, textShadow = 0 -1px 0 rgba(0,0,0,.25))
  // gradientBar will set the background to a pleasing blend of these, to support IE<=9
  // gradientBar(startColor, endColor, textColor, textShadow);
  background startColor
  color textColor
  border-color darken(startColor, 1)
  text-shadow none

  // in these cases the gradient won't cover the background, so we override
  &:hover, &:focus, &.disabled, &[disabled]
    color textColor
    background-color lighten(startColor, 5)

  &:active, &.active
    background-color darken(startColor, 8)

// Navbar vertical align
// -------------------------
// Vertically center elements in the navbar.
// Example an element has a height of 30px, so write out `.navbarVerticalAlign(30px) ` to calculate the appropriate top margin.
navbarVerticalAlign(elementHeight)
  margin-top (($navbarHeight - elementHeight) / 2)

// Grid System
// -----------

// Centered container element
container-fixed()
  margin-right auto
  margin-left auto
  clearfix();

// Table columns
tableColumns(columnSpan = 1)
  float none  // undo default grid column styles
  width ($gridColumnWidth * columnSpan) + ($gridGutterWidth * (columnSpan - 1)) - 16  // 16 is total padding on left and right of table cells
  margin-left 0  // undo default grid column styles

// Le grid system
// -------------------------
// Setup the mixins to be used

gridSystem-columns(gridGutterWidth, gridColumnWidth, gridRowWidth, columns)
  width (gridColumnWidth * columns) + (gridGutterWidth * (columns - 1))

gridSystem-offset(gridColumnWidth, gridGutterWidth, columns)
  margin-left (gridColumnWidth * columns) + (gridGutterWidth * (columns - 1)) + (gridGutterWidth * 2)

gridSystem-gridColumn(gridGutterWidth)
  float left
  min-height 1px
  margin-left gridGutterWidth

// Take these values and mixins, and make 'em do their thang

gridSystem-generate(gridColumns, gridColumnWidth, gridGutterWidth)
  // Row surrounds the columns
  .row
    margin-left: gridGutterWidth * (-1)
    clearfix()
  // Find all .span# classes within .row and give them the necessary properties for grid columns (supported by all browsers back to IE7, thanks dhg)
  [class*="span"]
    gridSystem-gridColumn(gridGutterWidth)
  // Default columns
  .span1
    gridSystem-columns(gridGutterWidth, gridColumnWidth, gridRowWidth, 1)
  .span2
    gridSystem-columns(gridGutterWidth, gridColumnWidth, gridRowWidth, 2)
  .span3
    gridSystem-columns(gridGutterWidth, gridColumnWidth, gridRowWidth, 3)
  .span4
    gridSystem-columns(gridGutterWidth, gridColumnWidth, gridRowWidth, 4)
  .span5
    gridSystem-columns(gridGutterWidth, gridColumnWidth, gridRowWidth, 5)
  .span6
    gridSystem-columns(gridGutterWidth, gridColumnWidth, gridRowWidth, 6)
  .span7
    gridSystem-columns(gridGutterWidth, gridColumnWidth, gridRowWidth, 7)
  .span8
    gridSystem-columns(gridGutterWidth, gridColumnWidth, gridRowWidth, 8)
  .span9
    gridSystem-columns(gridGutterWidth, gridColumnWidth, gridRowWidth, 9)
  .span10
    gridSystem-columns(gridGutterWidth, gridColumnWidth, gridRowWidth, 10)
  .span11
    gridSystem-columns(gridGutterWidth, gridColumnWidth, gridRowWidth, 11)
  .span12,
  .container
    gridSystem-columns(gridGutterWidth, gridColumnWidth, gridRowWidth, 12)
  // Offset column options
  .offset1
    gridSystem-offset(gridColumnWidth, gridGutterWidth, 1)
  .offset2
    gridSystem-offset(gridColumnWidth, gridGutterWidth, 2)
  .offset3
    gridSystem-offset(gridColumnWidth, gridGutterWidth, 3)
  .offset4
    gridSystem-offset(gridColumnWidth, gridGutterWidth, 4)
  .offset5
    gridSystem-offset(gridColumnWidth, gridGutterWidth, 5)
  .offset6
    gridSystem-offset(gridColumnWidth, gridGutterWidth, 6)
  .offset7
    gridSystem-offset(gridColumnWidth, gridGutterWidth, 7)
  .offset8
    gridSystem-offset(gridColumnWidth, gridGutterWidth, 8)
  .offset9
    gridSystem-offset(gridColumnWidth, gridGutterWidth, 9)
  .offset10
    gridSystem-offset(gridColumnWidth, gridGutterWidth, 10)
  .offset11
    gridSystem-offset(gridColumnWidth, gridGutterWidth, 11)

// Fluid grid system
// -------------------------
// Setup the mixins to be used

fluidGridSystem-columns(fluidGridGutterWidth, fluidGridColumnWidth, columns)
  width: 1% * (fluidGridColumnWidth * columns) + (fluidGridGutterWidth * (columns - 1))

fluidGridSystem-gridColumn(fluidGridGutterWidth)
  display block
  float left
  min-height 30px
  margin-left 1% * fluidGridGutterWidth
  box-sizing border-box
  // Take these values and mixins, and make 'em do their thang

fluidGridSystem-generate(gridColumns, fluidGridColumnWidth, fluidGridGutterWidth)
  // Row surrounds the columns
  .row-fluid
    width: 100%
    clearfix()
    // Find all .span# classes within .row and give them the necessary properties for grid columns (supported by all browsers back to IE7, thanks @dhg)
    [class*="span"]
      fluidGridSystem-gridColumn(fluidGridGutterWidth)
    [class*="span"]:first-child
      margin-left: 0
    // Default columns
    .span1
      fluidGridSystem-columns(fluidGridGutterWidth, fluidGridColumnWidth, 1)
    .span2
      fluidGridSystem-columns(fluidGridGutterWidth, fluidGridColumnWidth, 2)
    .span3
      fluidGridSystem-columns(fluidGridGutterWidth, fluidGridColumnWidth, 3)
    .span4
      fluidGridSystem-columns(fluidGridGutterWidth, fluidGridColumnWidth, 4)
    .span5
      fluidGridSystem-columns(fluidGridGutterWidth, fluidGridColumnWidth, 5)
    .span6
      fluidGridSystem-columns(fluidGridGutterWidth, fluidGridColumnWidth, 6)
    .span7
      fluidGridSystem-columns(fluidGridGutterWidth, fluidGridColumnWidth, 7)
    .span8
      fluidGridSystem-columns(fluidGridGutterWidth, fluidGridColumnWidth, 8)
    .span9
      fluidGridSystem-columns(fluidGridGutterWidth, fluidGridColumnWidth, 9)
    .span10
      fluidGridSystem-columns(fluidGridGutterWidth, fluidGridColumnWidth, 10)
    .span11
      fluidGridSystem-columns(fluidGridGutterWidth, fluidGridColumnWidth, 11)
    .span12
      fluidGridSystem-columns(fluidGridGutterWidth, fluidGridColumnWidth, 12)

// Input grid system
// -------------------------
inputGridSystem-inputColumns(gridGutterWidth, gridColumnWidth, gridRowWidth, columns)
  width: ((gridColumnWidth) * columns) + (gridGutterWidth * (columns - 1)) - 10

inputGridSystem-generate(gridColumns, gridColumnWidth, gridGutterWidth)
  input,
  select,
  textarea,
  .uneditable-input
    &[class*="span"]
      float none
      margin-left 0
    &.span1
      inputGridSystem-inputColumns(gridGutterWidth, gridColumnWidth, gridRowWidth, 1)
    &.span2
      inputGridSystem-inputColumns(gridGutterWidth, gridColumnWidth, gridRowWidth, 2)
    &.span3
      inputGridSystem-inputColumns(gridGutterWidth, gridColumnWidth, gridRowWidth, 3)
    &.span4
      inputGridSystem-inputColumns(gridGutterWidth, gridColumnWidth, gridRowWidth, 4)
    &.span5
      inputGridSystem-inputColumns(gridGutterWidth, gridColumnWidth, gridRowWidth, 5)
    &.span6
      inputGridSystem-inputColumns(gridGutterWidth, gridColumnWidth, gridRowWidth, 6)
    &.span7
      inputGridSystem-inputColumns(gridGutterWidth, gridColumnWidth, gridRowWidth, 7)
    &.span8
      inputGridSystem-inputColumns(gridGutterWidth, gridColumnWidth, gridRowWidth, 8)
    &.span9
      inputGridSystem-inputColumns(gridGutterWidth, gridColumnWidth, gridRowWidth, 9)
    &.span10
      inputGridSystem-inputColumns(gridGutterWidth, gridColumnWidth, gridRowWidth, 10)
    &.span11
      inputGridSystem-inputColumns(gridGutterWidth, gridColumnWidth, gridRowWidth, 11)
    &.span12
      inputGridSystem-inputColumns(gridGutterWidth, gridColumnWidth, gridRowWidth, 12)

// Make a Grid
// -------------------------
// Use .makeRow and .makeColumn to assign semantic layouts grid system behavior
makeRow()
  margin-left: $gridGutterWidth * (-1)
  clearfix()

makeColumn(columns = 1)
  float left
  margin-left $gridGutterWidth
  width ($gridColumnWidth * columns) + ($gridGutterWidth * (columns - 1))